{"version":3,"file":"main.js","mappings":"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","sources":["webpack://InfectionGame/./source/events.js","webpack://InfectionGame/./source/fluid.js","webpack://InfectionGame/./source/fps.js","webpack://InfectionGame/./source/game.js","webpack://InfectionGame/./source/mathUtils.js","webpack://InfectionGame/./source/populationGraph.js","webpack://InfectionGame/./source/probe.js","webpack://InfectionGame/./source/species/bacteria.js","webpack://InfectionGame/./source/species/neurons.js","webpack://InfectionGame/./source/statsDisplay.js","webpack://InfectionGame/./source/substance.js","webpack://InfectionGame/./source/timer.js","webpack://InfectionGame/./source/viewport.js","webpack://InfectionGame/./source/world.js","webpack://InfectionGame/webpack/bootstrap","webpack://InfectionGame/webpack/runtime/define property getters","webpack://InfectionGame/webpack/runtime/hasOwnProperty shorthand","webpack://InfectionGame/webpack/runtime/make namespace object","webpack://InfectionGame/./source/main.js"],"sourcesContent":["export class Events {\r\n\r\n    constructor() {\r\n        this.queue = [];\r\n    }\r\n\r\n    initialize(canvas) {\r\n        window.addEventListener('resize', (e) => this.onWindowResize(e));\r\n        window.addEventListener('keypress', (e) => this.onWindowKeypress(e));\r\n        canvas.addEventListener('click', (e) => this.onMouseClick(e));\r\n        canvas.addEventListener('mousemove', (e) => this.onMouseMove(e));\r\n        this.enqueueResizeEvent(window.innerWidth, window.innerHeight);\r\n    }\r\n\r\n    onMouseMove(e) {\r\n        this.enqueueMouseMoveEvent(e);\r\n    }\r\n\r\n    onWindowResize(e) {\r\n        this.enqueueResizeEvent(e.target.innerWidth, e.target.innerHeight);\r\n    }\r\n\r\n    onWindowKeypress(e) {\r\n        if (e.code === 'Space')\r\n            this.enqueueTogglePauseEvent();\r\n    }\r\n\r\n    onMouseClick(e) {\r\n        this.enqueueMouseClickEvent(e);\r\n    }\r\n\r\n    enqueueTogglePauseEvent() {\r\n        this.queue.push({type: 'pause'});\r\n    }\r\n\r\n    enqueueResizeEvent(newWidth, newHeight) {\r\n        this.queue.push(\r\n            { type: 'resize', width: newWidth, height: newHeight }\r\n        );\r\n    }\r\n\r\n    enqueueTickEvent(timeDiff) {\r\n        this.queue.push(\r\n            { type: 'tick', timeDiff: timeDiff }\r\n        );\r\n    }\r\n\r\n    enqueueFrameEvent(timeDiff) {\r\n        this.queue.push(\r\n            {type: 'frame', timeDiff: timeDiff}\r\n        );\r\n    }\r\n\r\n    enqueueMouseClickEvent(e) {\r\n        this.queue.push({type: 'click', x : e.clientX, y: e.clientY});\r\n    }\r\n\r\n    enqueueMouseMoveEvent(e) {\r\n        this.queue.push({type: 'move', x: e.clientX, y: e.clientY});\r\n    }\r\n\r\n    onResize(callback) {\r\n        this.invoke('resize', callback);\r\n    }\r\n\r\n    onTick(callback) {\r\n        this.invoke('tick', callback);\r\n    }\r\n\r\n    onFrame(callback) {\r\n        this.invoke('frame', callback);\r\n    }\r\n\r\n    onTogglePause(callback) {\r\n        this.invoke('pause', callback);\r\n    }\r\n\r\n    onClick(callback) {\r\n      this.invoke('click', callback);\r\n    }\r\n\r\n    onMove(callback) {\r\n        this.invoke('move', callback);\r\n    }\r\n\r\n    invoke(eventType, handler) {\r\n        const events = this.queue.filter(e => e.type === eventType);\r\n        for (let event of events)\r\n            handler(event);\r\n    }\r\n\r\n    clear() {\r\n        this.queue = [];\r\n    }\r\n}","import {Substance} from './substance';\r\nimport {MathUtils} from './mathUtils';\r\n\r\nexport class Fluid {\r\n    constructor() {\r\n        this.substances = [];\r\n    }\r\n\r\n    update(game) {\r\n        for (let substance of this.substances)\r\n            substance.update(game);\r\n    }\r\n\r\n    render(game) {\r\n        const {context, viewport} = game;\r\n        context.save();\r\n        \r\n        let clipRect = new Path2D();\r\n        clipRect.rect(viewport.left, viewport.top, viewport.width, viewport.height);\r\n        context.clip(clipRect);\r\n\r\n        for (let substance of this.substances)\r\n            substance.render(game);\r\n\r\n        context.restore();\r\n    }\r\n\r\n    addSubstance(x, y, amount) {\r\n        this.substances.push(new Substance(x, y, amount));\r\n    }\r\n\r\n    removeSubstance(substance) {\r\n        this.substances = this.substances.filter((s) => s !== substance);\r\n    }\r\n\r\n    consumeSubstancesAt(game, x, y) {\r\n        return this.substances\r\n            .map(s => this.consumeSubstanceAt(game, s, x, y))\r\n            .reduce((a, b) => a + b, 0);\r\n    }\r\n\r\n    consumeSubstanceAt(game, substance, x, y) {\r\n        const amount = this.getConcentration(substance, x, y);\r\n        substance.subtract(game, amount);\r\n        return amount;\r\n    }\r\n\r\n    getConcentration(substance, x, y) {\r\n        if (substance.area <= 0) return 0;\r\n        const  dist = MathUtils.dist(x, substance.x, y, substance.y);\r\n        if (dist > substance.area) return 0;\r\n        return substance.concentration;\r\n    }\r\n\r\n    getTotalConcentration(x, y) {\r\n        return this.substances\r\n            .map(s => this.getConcentration(s, x, y))\r\n            .reduce((a, b) => a + b, 0);\r\n    }\r\n}","export class FPS {\r\n    \r\n    constructor() {\r\n        this.fps = 0;\r\n    }\r\n\r\n    update(game) {\r\n        game.events.onFrame((e) => this.updateFps(e.timeDiff));\r\n    }   \r\n\r\n    updateFps(timeDiff) {\r\n        this.fps = Math.round(1000 / timeDiff);\r\n    }\r\n\r\n    render(game) {\r\n        const {context} = game;\r\n\r\n        context.fillStyle = 'black';\r\n        context.font = '10px sans-serif';\r\n        context.fillText('FPS: ' + this.fps, 3, 10);\r\n    } \r\n}","import {Viewport} from './viewport';\r\nimport {Events} from './events';\r\nimport {FPS} from './fps';\r\nimport {World} from './world';\r\nimport {Timer} from './timer';\r\nimport {Probe} from './probe';\r\nimport {StatsDisplay} from './statsDisplay';\r\nimport {PopulationGraph} from './populationGraph';\r\n\r\nexport class Game {\r\n\r\n    constructor(canvas) {\r\n        this.events = new Events();\r\n        this.canvas = canvas;\r\n        this.context = this.canvas.getContext('2d');\r\n        this.viewport = new Viewport();\r\n        this.world = new World();\r\n        this.timer = new Timer();\r\n        this.fps = new FPS();\r\n        this.probe = new Probe();\r\n        this.populationGraph = new PopulationGraph();\r\n        this.statsDisplay = new StatsDisplay();\r\n        this.paused = false;\r\n    }\r\n\r\n    initialize() {\r\n        this.events.initialize(this.canvas);\r\n        this.nextFrame();\r\n    }\r\n\r\n    run() {\r\n        this.update();\r\n        this.render();\r\n        this.nextFrame();\r\n    }\r\n\r\n    update() {\r\n        this.events.onTogglePause(() => this.paused = !this.paused);\r\n        this.viewport.update(this);\r\n        this.timer.update(this);\r\n        this.fps.update(this);\r\n        this.world.update(this);\r\n        this.populationGraph.update(this);\r\n        this.probe.update(this);\r\n        this.statsDisplay.update(this);\r\n        this.events.clear();\r\n    }\r\n\r\n    render() {\r\n        this.viewport.render(this);\r\n        this.timer.render(this);\r\n        this.world.render(this);\r\n        this.fps.render(this);\r\n        this.populationGraph.render(this);\r\n        this.probe.render(this);\r\n        this.statsDisplay.render(this);\r\n    }\r\n\r\n    nextFrame() {\r\n        window.requestAnimationFrame(() => this.run());\r\n    }\r\n}","export class MathUtils {\r\n\r\n    static dist(x1, x2, y1, y2) {\r\n        const dx = x2 - x1;\r\n        const dy = y2 - y1;\r\n        //return 1 / Q_rsqrt(dx * dx + dy * dy);\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    \r\n\r\n}\r\n\r\nfunction Q_rsqrt(number)\r\n{ \r\n    var i;\r\n    var x2, y;\r\n    const threehalfs = 1.5;\r\n  \r\n    x2 = number * 0.5;\r\n    y = number;\r\n    var buf = new ArrayBuffer(4);\r\n    (new Float32Array(buf))[0] = number;\r\n    i =  (new Uint32Array(buf))[0];\r\n    i = (0x5f3759df - (i >> 1)); //What the fuck?\r\n    (new Uint32Array(buf))[0] = i;\r\n    y = (new Float32Array(buf))[0];\r\n    y  = y * ( threehalfs - ( x2 * y * y ) );   // 1st iteration\r\n\r\n    return y;\r\n}","export class PopulationGraph {\r\n    constructor() {\r\n        this.points = [];\r\n        this.maxPoints = 100;\r\n        this.width = 200;\r\n        this.height = 40;\r\n        this.top = 15;\r\n        this.left = 3;\r\n    }\r\n\r\n    update(game) {\r\n        const {events} = game;\r\n        events.onFrame(() => this.updateGraph(game.world));\r\n    }\r\n\r\n    updateGraph(world) {\r\n        this.points.push(world.species.length);\r\n        if (this.points.length > this.maxPoints)\r\n            this.points.shift();\r\n    }\r\n\r\n    render(game) {\r\n        const {context} = game;\r\n\r\n        const maxValue = Math.max(...this.points);\r\n        const minValue = Math.min(...this.points);\r\n        const avgValue = this.points.reduce((a, b) => a + b, 0) / this.points.length;\r\n        const vScale = this.height / (maxValue - minValue);\r\n        const hScale = this.width / this.maxPoints;\r\n        const bottom = this.top + this.height;\r\n\r\n        context.font = '8px sans-serif';\r\n        context.fillStyle = 'rgba(0, 0, 0, 0.5)';\r\n        context.fillText(maxValue, this.left + 1, this.top + 10);\r\n        context.fillText(minValue, this.left + 1, bottom - 2);\r\n        context.fillText(Math.ceil(avgValue), this.left + 1, this.top + this.height / 2 + 4);\r\n\r\n        context.beginPath();\r\n        for (let i = 0; i < this.points.length; i++)\r\n        {\r\n            context.moveTo(this.left + i * hScale, bottom);\r\n            context.lineTo(this.left + i * hScale, bottom - (this.points[i] - minValue) * vScale);\r\n        }\r\n        context.strokeStyle = 'rgba(0, 0, 0, 0.2)';\r\n        context.stroke();\r\n    }\r\n}","export class Probe {\r\n    constructor() {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.location = {x:0, y:0};\r\n        this.enabled = false;\r\n    }\r\n\r\n    update(game) {\r\n        if (!this.enabled) return;\r\n        \r\n        this.concentration = this.getConcentration(game).toFixed(4);\r\n        game.events.onMove(e => {\r\n            if (!game.viewport.contains(e.x, e.y)) return;\r\n            this.x = e.x;\r\n            this.y = e.y;\r\n            this.location = game.world.toGame(game, this.x, this.y);\r\n        });\r\n    }\r\n\r\n    render(game) {\r\n        if (!this.enabled) return;\r\n\r\n        const {context} = game;\r\n        context.fillStyle = 'rgba(0, 0, 0, 0.5)';\r\n        context.fillText(this.concentration, this.x + 2, this.y - 2);\r\n        context.strokeStyle = 'black';\r\n        context.beginPath();\r\n        context.moveTo(this.x, this.y - 5);\r\n        context.lineTo(this.x, this.y + 5);\r\n        context.moveTo(this.x - 5, this.y);\r\n        context.lineTo(this.x + 5, this.y);\r\n        context.stroke();\r\n    }\r\n\r\n    getConcentration(game) {\r\n        const {x,y} = this.location;\r\n        return game.world.fluid.getTotalConcentration(x, y);\r\n    }\r\n}","import {RandomMovementNeuron, LeftMovementNeuron} from './neurons';\r\n\r\nexport class Bacteria {\r\n\r\n    constructor(x, y, generation) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.age = 0;\r\n        this.isSelected = false;\r\n        this.lifetime = 1 + Math.ceil(Math.random() * 10);\r\n        this.reproductionAge = 5;\r\n        this.movementNeuron = new RandomMovementNeuron();\r\n        this.poisonConsumed = 0;\r\n        this.maxPoisoning = 6;\r\n        this.generation = generation;\r\n    }\r\n\r\n    update(game) {\r\n        const {world, events} = game;\r\n\r\n        events.onFrame((e) => { \r\n            this.updatePosition(world, e.timeDiff); \r\n            this.consumeSubstance(game);\r\n        });\r\n\r\n        events.onTick((e) => this.heartbeat(game, e.timeDiff));\r\n    }\r\n\r\n    heartbeat(game, timeDiff) {\r\n        this.updateAge(game.world);\r\n    }\r\n    \r\n    updatePosition(world, timeDiff) {\r\n        const {x, y} = this.movementNeuron.nextPosition(world, this, timeDiff);\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    updateAge(world) {\r\n        this.age += 1;\r\n        if (this.age >= this.lifetime) {\r\n            this.die(world);\r\n        } else if (this.age >= this.reproductionAge) {\r\n            this.reproduce(world);\r\n        }\r\n    }\r\n\r\n    consumeSubstance(game) {\r\n        const amount = game.world.fluid.consumeSubstancesAt(game, this.x, this.y);\r\n        this.poisonConsumed += amount;\r\n    }\r\n\r\n    reproduce(world) {\r\n        if (world.species.length > world.maxPopulation) return;\r\n        if (this.poisonConsumed > this.maxPoisoning) return;\r\n        const offspring1 = new Bacteria(this.x, this.y, this.generation + 1);\r\n        const offspring2 = new Bacteria(this.x, this.y, this.generation + 1);\r\n        world.addSpecies(offspring1);\r\n        world.addSpecies(offspring2);\r\n        world.removeSpecies(this);\r\n    }\r\n\r\n    die(world) {\r\n        world.addSubstance(this.x, this.y, 20);\r\n        world.removeSpecies(this);\r\n    }\r\n \r\n    render(game) {\r\n        const {context, world} = game;\r\n\r\n        const location = world.toScreen(game, this.x, this.y);\r\n\r\n        const scale = world.getScaleX(game);\r\n\r\n        context.beginPath();\r\n        context.fillStyle = 'black';\r\n        if (this.isSelected) context.fillStyle = 'cyan';\r\n        context.arc(location.x, location.y, scale / 2, 0, 2 * Math.PI);\r\n        context.fill();\r\n    }\r\n}","class MovementNeuron {\r\n    constructor() {\r\n        this.speed = 10;\r\n    }\r\n\r\n    getDistance(timeDiff) {\r\n        return (timeDiff / 1000) * this.speed\r\n    }\r\n\r\n    restrict(world, x, y) {\r\n        if (x < 0) x = 0;\r\n        if (y < 0) y = 0;\r\n        if (x >= world.width - 1) x = world.width - 1;\r\n        if (y >= world.height - 1) y = world.height - 1;\r\n        return {x, y};\r\n    }\r\n}\r\n\r\nexport class RandomMovementNeuron extends MovementNeuron {\r\n\r\n    constructor() {\r\n        super();\r\n        this.direction = Math.random() * 2 * Math.PI;\r\n    }\r\n\r\n    nextPosition(world, bacteria, timeDiff) {\r\n        this.updateDirection();\r\n        const distance = this.getDistance(timeDiff);\r\n        let x = bacteria.x + Math.cos(this.direction) * distance;\r\n        let y = bacteria.y + Math.sin(this.direction) * distance;\r\n        return this.restrict(world, x, y);\r\n    }\r\n\r\n    updateDirection() {\r\n        const changeProb = Math.random();\r\n        \r\n        if (changeProb > 0.95)\r\n            this.direction = Math.random() * 2 * Math.PI;\r\n        else if (changeProb > 0.5)\r\n            this.direction += (Math.random() - 0.5) * Math.PI * 0.2;\r\n    }\r\n}\r\n\r\nexport class LeftMovementNeuron extends MovementNeuron {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    nextPosition(world, bacteria, timeDiff) {\r\n        const distance = this.getDistance(timeDiff);\r\n        return this.restrict(world, bacteria.x - distance, bacteria.y);\r\n    }\r\n}","export class StatsDisplay {\r\n    constructor() {\r\n        this.left = 3;\r\n        this.top = 70 ;\r\n    }\r\n\r\n    update(game) {\r\n    }\r\n\r\n    render(game) {\r\n        const {context} = game;\r\n        let top = this.top;\r\n\r\n        context.fillStyle = 'black';\r\n        context.font = \"10px Arial\";\r\n        context.textAlign = 'left';\r\n\r\n        const generations = game.world.species.map(s => s.generation);\r\n\r\n        context.fillText('Species: ' + game.world.species.length, this.left, top);\r\n        context.fillText('Year: ' + game.timer.ticks, this.left, top += 12);\r\n\r\n        if (generations.length)\r\n        context.fillText(`Generations: ${Math.min(...generations)}-${Math.max(...generations)}`, this.left, top += 12);\r\n\r\n        const bacteria = game.world.selectedSpecies;\r\n        if (!game.world.selectedSpecies) return;\r\n        context.fillText('Age: ' + bacteria.age, this.left, top += 12);\r\n        context.fillText('Lifetime: ' + bacteria.lifetime, this.left, top += 12);\r\n        context.fillText('Poisoning: ' + bacteria.poisonConsumed, this.left, top += 12);\r\n        context.fillText('Generation: ' + bacteria.generation, this.left, top += 12);\r\n    }\r\n}","export class Substance {\r\n\r\n    constructor(x, y, amount) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.area = 0.5;\r\n        this.spreadRate = 0.01;\r\n        this.dissolveRate = 0.01;\r\n        this.amount = amount;\r\n        this.minAmount = 0.01;\r\n        this.concentrationFactor = this.amount / this.area;\r\n        this.concentration = this.amount / this.area / this.concentrationFactor;\r\n    }\r\n\r\n    update(game) {\r\n        game.events.onFrame((e) => this.spread(game, e.timeDiff));\r\n    }\r\n\r\n    spread(game, timeDiff) {\r\n        if (this.amount <= this.minAmount) {\r\n            game.world.removeSubstance(this);\r\n            return;\r\n        }\r\n        \r\n        this.area += this.spreadRate * timeDiff;\r\n        this.amount -= this.dissolveRate * timeDiff;\r\n        this.concentration = this.amount / this.area / this.concentrationFactor;\r\n    }\r\n\r\n    subtract(game, amount) {\r\n        this.amount -= amount;\r\n        this.concentration = this.amount / this.area / this.concentrationFactor;\r\n\r\n        if (this.amount <= this.minAmount) {\r\n            game.world.removeSubstance(this);\r\n            return;\r\n        }\r\n    }\r\n\r\n    render(game) {\r\n        const {context, world} = game;\r\n\r\n        const {x, y} = world.toScreen(game, this.x, this.y);\r\n        const radius = world.getScaleX(game) * this.area;\r\n\r\n        const alpha = this.concentration;\r\n        context.beginPath();\r\n        context.arc(x, y, radius, 0, Math.PI * 2);\r\n        context.fillStyle = `rgba(255, 0, 0, ${alpha})`;\r\n        context.fill();\r\n    }\r\n}","export class Timer {\r\n    constructor(interval) {\r\n        this.frameStart = this.tickStart = Date.now();\r\n        this.interval = interval || 100;\r\n        this.ticks = 0;\r\n    }\r\n\r\n    update(game) {\r\n        const now = Date.now();\r\n\r\n        if (game.paused) {\r\n            this.frameStart = now;\r\n            this.tickStart = now;\r\n            return;\r\n        }\r\n        \r\n        const frameTime = now - this.frameStart;\r\n        this.frameStart = now;\r\n\r\n        game.events.enqueueFrameEvent(frameTime);\r\n\r\n        const tickTime = now - this.tickStart;\r\n        if (tickTime >= this.interval) {\r\n            game.events.enqueueTickEvent(tickTime);\r\n            this.tickStart = now;\r\n            this.ticks++;\r\n        }\r\n    }\r\n\r\n    render() { }\r\n}","export class Viewport {\r\n\r\n    update(game) {\r\n        game.events.onResize((e) => this.resize(e));\r\n    }\r\n\r\n    resize(e) {\r\n        this.canvasWidth = e.width;\r\n        this.canvasHeight = e.height;\r\n\r\n        const minDim = Math.min(e.width, e.height);\r\n\r\n        this.width = minDim;\r\n        this.height = minDim;\r\n        \r\n        this.left = this.canvasWidth / 2 - this.width / 2;\r\n        this.top = this.canvasHeight / 2 - this.height / 2;\r\n    }\r\n\r\n    contains(x, y) {\r\n        return x >= this.left && \r\n            x <= this.left + this.width &&\r\n            y >= this.top &&\r\n            y <= this.top + this.height;\r\n    }\r\n\r\n    render(game) {\r\n        const {context} = game;\r\n        context.canvas.width = this.canvasWidth;\r\n        context.canvas.height = this.canvasHeight;\r\n\r\n        context.clearRect(0, 0, context.canvas.width, context.canvas.height);\r\n\r\n        context.beginPath();\r\n        context.rect(this.left, this.top, this.width, this.height);\r\n        context.stroke();\r\n    }\r\n}","import {Bacteria} from './species/bacteria';\r\nimport {Fluid} from './fluid';\r\nimport {MathUtils} from './mathUtils';\r\n\r\nexport class World {\r\n\r\n    constructor() {\r\n        this.width = 128;\r\n        this.height = 128;\r\n        this.maxPopulation = 2000;\r\n        this.species = [\r\n            new Bacteria(64, 64, 0)\r\n        ];\r\n        this.fluid = new Fluid();\r\n    }\r\n\r\n    update(game) {\r\n        this.fluid.update(game);\r\n        \r\n        for (let s of this.species)\r\n            s.update(game);\r\n\r\n        game.events.onClick((e) => this.handleClick(e, game));\r\n    }\r\n\r\n    handleClick(e, game) {\r\n      this.species.forEach(s => s.isSelected = false);\r\n\r\n      this.selectedSpecies = this.species.filter(s => this.isClicked(s, e, game))[0];\r\n      \r\n       if (this.selectedSpecies) this.selectedSpecies.isSelected = true;\r\n    }\r\n\r\n    isClicked(species, e, game) {\r\n      const location = this.toScreen(game, species.x, species.y);\r\n      const dist = MathUtils.dist(location.x, e.x, location.y, e.y);\r\n      return dist <= this.getScaleX(game);\r\n    }\r\n\r\n    render(game) {\r\n        this.fluid.render(game);\r\n        for (let s of this.species)\r\n            s.render(game);\r\n    }\r\n\r\n    toScreen(game, x, y) {\r\n        const {viewport} = game;\r\n        const scaleX = this.getScaleX(game);\r\n        const scaleY = this.getScaleY(game);\r\n        return {\r\n            x: x * scaleX + viewport.left + scaleX / 2,\r\n            y: y * scaleY + viewport.top + scaleY / 2\r\n        }\r\n    }\r\n\r\n    toGame(game, x, y) {\r\n        const {viewport} = game;\r\n        const scaleX = this.getScaleX(game);\r\n        const scaleY = this.getScaleY(game);\r\n        return {\r\n            x: (x - viewport.left) / scaleX,\r\n            y: (y - viewport.top) / scaleY\r\n        }\r\n    }\r\n\r\n    getScaleX(game) {\r\n        const {viewport} = game;\r\n        return viewport.width / this.width;\r\n    }\r\n\r\n    getScaleY(game) {\r\n        const {viewport} = game;\r\n        return viewport.height / this.height;\r\n    }\r\n\r\n    addSpecies(species) {\r\n        this.species.push(species);\r\n    }\r\n\r\n    removeSpecies(species) {\r\n        this.species = this.species.filter(s => s !== species);\r\n        if (this.selectedSpecies === species) this.selectedSpecies = null;\r\n    }\r\n\r\n    addSubstance(x, y, amount) {\r\n        this.fluid.addSubstance(x, y, amount);\r\n    }\r\n\r\n    removeSubstance(substance) {\r\n        this.fluid.removeSubstance(substance);\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {Game} from './game';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const canvas = document.getElementById('viewport');\r\n    const game = new Game(canvas);\r\n    game.initialize();\r\n});"],"names":["Events","queue","canvas","window","addEventListener","e","onWindowResize","onWindowKeypress","onMouseClick","onMouseMove","enqueueResizeEvent","innerWidth","innerHeight","enqueueMouseMoveEvent","target","code","enqueueTogglePauseEvent","enqueueMouseClickEvent","push","type","newWidth","newHeight","width","height","timeDiff","x","clientX","y","clientY","callback","invoke","eventType","handler","events","filter","event","Substance","MathUtils","Fluid","substances","game","substance","update","context","viewport","save","clipRect","Path2D","rect","left","top","clip","render","restore","amount","s","map","consumeSubstanceAt","reduce","a","b","getConcentration","subtract","area","dist","concentration","FPS","fps","onFrame","updateFps","Math","round","fillStyle","font","fillText","Viewport","World","Timer","Probe","StatsDisplay","PopulationGraph","Game","getContext","world","timer","probe","populationGraph","statsDisplay","paused","initialize","nextFrame","onTogglePause","clear","requestAnimationFrame","run","x1","x2","y1","y2","dx","dy","sqrt","Q_rsqrt","number","i","threehalfs","buf","ArrayBuffer","Float32Array","Uint32Array","points","maxPoints","updateGraph","species","length","shift","maxValue","max","minValue","min","avgValue","vScale","hScale","bottom","ceil","beginPath","moveTo","lineTo","strokeStyle","stroke","location","enabled","toFixed","onMove","contains","toGame","fluid","getTotalConcentration","RandomMovementNeuron","LeftMovementNeuron","Bacteria","generation","age","isSelected","lifetime","random","reproductionAge","movementNeuron","poisonConsumed","maxPoisoning","updatePosition","consumeSubstance","onTick","heartbeat","updateAge","nextPosition","die","reproduce","consumeSubstancesAt","maxPopulation","offspring1","offspring2","addSpecies","removeSpecies","addSubstance","toScreen","scale","getScaleX","arc","PI","fill","MovementNeuron","speed","direction","bacteria","updateDirection","distance","getDistance","cos","sin","restrict","changeProb","textAlign","generations","ticks","selectedSpecies","spreadRate","dissolveRate","minAmount","concentrationFactor","spread","removeSubstance","radius","alpha","interval","frameStart","tickStart","Date","now","frameTime","enqueueFrameEvent","tickTime","enqueueTickEvent","onResize","resize","canvasWidth","canvasHeight","minDim","clearRect","onClick","handleClick","forEach","isClicked","scaleX","scaleY","getScaleY","document","getElementById"],"sourceRoot":""}